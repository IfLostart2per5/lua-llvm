--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "IntValue".
--
-- Extends <a href="Value.html">Value</a><br />
module("IntValue")

--- Create a new IntValue object.
--
-- @param int_ty Must be of type <a href="Type.html">Type</a>.
-- @param n Must be of type <code>integer</code>.
-- @param sign_extend Must be of type <code>boolean</code>.
-- @return <a href="IntValue.html">IntValue</a>.
-- @name IntValue.const_int
function IntValue.const_int(int_ty, n, sign_extend)
end

--- Create a new IntValue object.
--
-- @param int_ty Must be of type <a href="Type.html">Type</a>.
-- @param str Must be of type <code>string</code>.
-- @param radix Must be of type <code>integer</code>.
-- @return <a href="IntValue.html">IntValue</a>.
-- @name IntValue.const_int_of_string
function IntValue.const_int_of_string(int_ty, str, radix)
end

--- object method.
--
-- @return <code>string</code>.
-- @name Value:name
function Value:name()
end

--- object method.
--
-- @param str Must be of type <code>string</code>.
-- @name Value:set_name
function Value:set_name(str)
end

--- object method.
--
--  Dumps the value to stderr 
-- @name Value:dump
function Value:dump()
end

--- object method.
--
-- @return <code>boolean</code>.
-- @name Value:is_constant
function Value:is_constant()
end

--- object method.
--
-- @return <code>boolean</code>.
-- @name Value:is_undef
function Value:is_undef()
end

--- object method.
--
-- @return <code>boolean</code>.
-- @name Value:is_null
function Value:is_null()
end

