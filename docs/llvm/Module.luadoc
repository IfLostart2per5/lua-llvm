--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "Module".
--
module("Module")

--- Create a new Module object.
--
--  Context is optional 
-- @param identifier Must be of type <code>string</code>.
-- @param ctx Must be of type <a href="Context.html">Context</a>.
-- @return <a href="Module.html">Module</a>.
-- @name Module.create
function Module.create(identifier, ctx)
end

--- object method.
--
-- @return <a href="Module.html">Module</a>.
-- @name Module:clone
function Module:clone()
end

--- object method.
--
-- @return <code>string</code>.
-- @name Module:identifier
function Module:identifier()
end

--- object method.
--
-- @param str Must be of type <code>string</code>.
-- @name Module:set_identifier
function Module:set_identifier(str)
end

--- object method.
--
-- @name Module:dump
function Module:dump()
end

--- object method.
--
-- @return <code>string</code>.
-- @name Module:target
function Module:target()
end

--- object method.
--
-- @param target_triplet Must be of type <code>string</code>.
-- @name Module:set_target
function Module:set_target(target_triplet)
end

--- object method.
--
-- @param name Must be of type <code>string</code>.
-- @param function_type Must be of type <a href="FunctionType.html">FunctionType</a>.
-- @return <a href="FunctionValue.html">FunctionValue</a>.
-- @name Module:add_function
function Module:add_function(name, function_type)
end

--- object method.
--
-- @param name Must be of type <code>string</code>.
-- @return <a href="Value.html">Value</a>.
-- @name Module:get_function
function Module:get_function(name)
end

--- Destroy this object (will be called by Garbage Collector).
--
-- @name Module:dispose
function Module:dispose()
end

